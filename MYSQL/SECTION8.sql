-- A44 AUTO-RELACIONAMENTO
CREATE DATABASE STORE3;

USE STORE3;

CREATE TABLE COURSES (
      IDCOURSE INT PRIMARY KEY AUTO_INCREMENT,
      NAME VARCHAR(100),
      HOURS INT,
      PRICE FLOAT(10,2),
      F_IDPREREQ INT
);

ALTER TABLE COURSES
ADD CONSTRAINT FKPREREQ
FOREIGN KEY(F_IDPREREQ)
REFERENCES COURSES(IDCOURSE);

INSERT INTO COURSES VALUES (NULL, "BD RELACIONAL", 20, 400.00, NULL);
INSERT INTO COURSES VALUES (NULL, "BUSINESS INTELLIGENCE", 40, 800.00, 1);
INSERT INTO COURSES VALUES (NULL,"RELATÓRIOS AVANÇADOS", 20, 600.00, 2);
INSERT INTO COURSES VALUES (NULL, "LÓGICA DE PROGRAMAÇÃO", 20, 400.00, NULL);
INSERT INTO COURSES VALUES (NULL, "RUBY", 30,700.00, 4);

SELECT C.NAME, 
            C.HOURS, 
                  C.PRICE,
                        IFNULL(F.NAME,"SEM REQ.") AS "REQ."
FROM COURSES C
LEFT JOIN COURSES F
ON F.IDCOURSE = C.F_IDPREREQ;


-- A45 CURSORES
CREATE DATABASE CURSORS;

USE CURSORS;

CREATE TABLE SELLERS (
      IDSELLER INT PRIMARY KEY AUTO_INCREMENT,
      NAME VARCHAR(100),
      JAN INT,
      FEV INT,
      MAR INT
);
INSERT INTO SELLERS VALUES(NULL,'MAFRA',32432,242334,574545);
INSERT INTO SELLERS VALUES(NULL,'CLARA',65465,65443,653454);
INSERT INTO SELLERS VALUES(NULL,'JOAO',12432,65356,8756);
INSERT INTO SELLERS VALUES(NULL,'LILIAN',4567,9676,8765);
INSERT INTO SELLERS VALUES(NULL,'ANTONIO',3467,68756,99765);
INSERT INTO SELLERS VALUES(NULL,'GLORIA',54786,76889,7098);

SELECT * FROM SELLERS;

SELECT  NAME, (JAN+FEV+MAR) AS TOTAL
FROM SELLERS;

SELECT NAME, (JAN+FEV+MAR) AS TOTAL, (JAN+FEV+MAR)/3 AS "MÉDIA"
FROM SELLERS;

CREATE TABLE SALES_TOTAL(
      NAME VARCHAR(100),
      JAN INT,
      FEV INT,
      MAR INT,
      TOTAL INT,
      MEDIA INT
);

DELIMITER #
CREATE PROCEDURE INSERT_DATAS()
BEGIN

      DECLARE END1 INT DEFAULT 0;
      DECLARE VARIABLE1, VARIABLE2, VARIABLE3, SALESTOTAL,SALESMEDIA INT;
      DECLARE SALESNAME VARCHAR(100);

      DECLARE REGISTERS CURSOR FOR(
            SELECT NAME, JAN, FEV, MAR FROM SELLERS
      );

      DECLARE CONTINUE HANDLER FOR NOT FOUND SET END1=1;

      OPEN REGISTERS;

      REPEAT

            FETCH REGISTERS INTO SALESNAME, VARIABLE1, VARIABLE2, VARIABLE3;
      
            IF NOT END1 THEN
                  SET SALESTOTAL=VARIABLE1+VARIABLE2+VARIABLE3;
                  SET SALESMEDIA=SALESTOTAL/3;

                  INSERT INTO SALES_TOTAL VALUES (SALESNAME, VARIABLE1, VARIABLE2, VARIABLE3, SALESTOTAL, SALESMEDIA);
            END IF;
      UNTIL END1 END REPEAT;
      CLOSE REGISTERS;
END #

DELIMITER ;

SELECT * FROM SELLERS;

CALL INSERT_DATAS();-- 1º
SELECT * FROM SALES_TOTAL; -- 2º 

-- A46  TRIGGERS COM VARIÁVEIS - AVULSO
DELIMITER #

CREATE TRIGGER TOTAL
BEFORE INSERT ON SELLERS
FOR EACH ROW
BEGIN
      DECLARE SELLERTOTAL, SELLERMEDIA INT;

      SET SELLERTOTAL := NEW.JAN + NEW.FEV + NEW.MAR;
      SET SELLERMEDIA := (NEW.JAN + NEW.FEV + NEW.MAR) / 3;

      INSERT INTO SALES_TOTAL VALUES(NEW.NAME, NEW.JAN, NEW.FEV, NEW.MAR, SELLERTOTAL, SELLERMEDIA);

END #

DELIMITER ;

DROP TRIGGER TOTAL;
INSERT INTO SELLERS VALUES (NULL, "JULIANO",928392,922198, 928392);

SELECT * FROM SELLERS;
SELECT * FROM SALES_TOTAL;


-- A47 SEGUNDA E TERCEIRA FORMASDELIMITER #

CREATE TRIGGER TOTAL
BEFORE INSERT ON SELLERS
FOR EACH ROW
BEGIN
      DECLARE SELLERTOTAL, SELLERMEDIA INT;

      SET SELLERTOTAL := NEW.JAN + NEW.FEV + NEW.MAR;
      SET SELLERMEDIA := (NEW.JAN + NEW.FEV + NEW.MAR) / 3;

      INSERT INTO SALES_TOTAL VALUES(NEW.NAME, NEW.JAN, NEW.FEV, NEW.MAR, SELLERTOTAL, SELLERMEDIA);

END # NORMAIS
CREATE DATABASE CLINIC;

USE CLINIC;

CREATE TABLE PATIENT (
      IDPATIENT INT PRIMARY KEY AUTO_INCREMENT,
      NAME VARCHAR(100),
      GENDER CHAR(1),
      EMAIL VARCHAR(100),
      BIRTH DATE
);

CREATE TABLE DOCTOR (
      IDDOCTOR INT PRIMARY KEY AUTO_INCREMENT,
      NAME VARCHAR(100),
      GENDER CHAR(1),
      SPECIALTY VARCHAR(100),
      EMPLOYEE ENUM("Y", "N")
);

CREATE TABLE HOSPITAL (
      IDHOSPITAL INT PRIMARY KEY AUTO_INCREMENT,
      NAME VARCHAR(100),
      DISTRICT VARCHAR(100),
      CITY VARCHAR(100),
      STATE CHAR(2)
);


CREATE TABLE QUERY1 (
      IDQUERY INT PRIMARY AUTO_INCREMENT,
      F_IDPACIENT INT,
      F_IDDOCTOR INT,
      F_IDHOSPITAL INT,
      DATA DATETIME,
      DIAGNOSIS VARCHAR(100)
);

ALTER TABLE QUERY1
ADD CONSTRAINT FKPATIENT
FOREIGN KEY (F_IDPATIENT)
REFERENCES PATIENT(IDPATIENT);

ALTER TABLE QUERY1
ADD CONSTRAINT FKDOCTOR
FOREIGN KEY (F_IDDOCTOR)
REFERENCES DOCTOR(IDDOCTOR);

ALTER TABLE QUERY1
ADD CONSTRAINT FKHOSPITAL
FOREIGN KEY (F_IDHOSPITAL)
REFERENCES HOSPITAL(IDHOSPITAL);

CREATE TABLE HOSPITALIZATION (
      IDHOSPIT INT PRIMARY KEY AUTO_INCREMENT,
      ENTRANCE DATATIME,
      ROOM INT,
      EXIT DATETIME,
      OBSERVATIONS VARCHAR(100),
      F_IDQUERY INT UNIQUE
);

ALTER TABLE HOSPITALIZATION
ADD CONSTRAINT FKHOSP_QUERY
FOREIGN KEY (F_QUERY)
REFERENCES QUERY1(IDQUERY);